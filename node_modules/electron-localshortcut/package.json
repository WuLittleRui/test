{
  "_args": [
    [
      {
        "raw": "electron-localshortcut@^3.0.0",
        "scope": null,
        "escapedName": "electron-localshortcut",
        "name": "electron-localshortcut",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "E:\\work\\yq-hospital\\yq-hospital-admin\\hospital-admin\\node_modules\\electron-debug"
    ]
  ],
  "_from": "electron-localshortcut@>=3.0.0 <4.0.0",
  "_id": "electron-localshortcut@3.1.0",
  "_inCache": true,
  "_location": "/electron-localshortcut",
  "_nodeVersion": "9.3.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/electron-localshortcut-3.1.0.tgz_1515091971327_0.6988502172753215"
  },
  "_npmUser": {
    "name": "parroit",
    "email": "andrea@parro.it"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "electron-localshortcut@^3.0.0",
    "scope": null,
    "escapedName": "electron-localshortcut",
    "name": "electron-localshortcut",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/electron-debug"
  ],
  "_resolved": "https://registry.npmjs.org/electron-localshortcut/-/electron-localshortcut-3.1.0.tgz",
  "_shasum": "10c1ffd537b8d39170aaf6e1551341f7780dd2ce",
  "_shrinkwrap": null,
  "_spec": "electron-localshortcut@^3.0.0",
  "_where": "E:\\work\\yq-hospital\\yq-hospital-admin\\hospital-admin\\node_modules\\electron-debug",
  "author": {
    "name": "andrea@parro.it"
  },
  "bugs": {
    "url": "https://github.com/parro-it/electron-localshortcut/issues"
  },
  "dependencies": {
    "debug": "^2.6.8",
    "electron-is-accelerator": "^0.1.0",
    "keyboardevent-from-electron-accelerator": "^1.1.0",
    "keyboardevents-areequal": "^0.2.1"
  },
  "description": "register/unregister a keyboard shortcut locally to a BrowserWindow instance, without using a Menu",
  "devDependencies": {
    "delay": "^2.0.0",
    "documentation": "^4.0.0-rc.1",
    "electron": "~1.6.7",
    "faucet": "^0.0.1",
    "p-electron": "^0.8.0",
    "p-event": "^1.1.0",
    "p-timeout": "^1.0.0",
    "robotjs": "^0.4.7",
    "tape-async": "^2.3.0",
    "xo": "^0.19.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-MgL/j5jdjW7iA0R6cI7S045B0GlKXWM1FjjujVPjlrmyXRa6yH0bGSaIAfxXAF9tpJm3pLEiQzerYHkRh9JG/A==",
    "shasum": "10c1ffd537b8d39170aaf6e1551341f7780dd2ce",
    "tarball": "https://registry.npmjs.org/electron-localshortcut/-/electron-localshortcut-3.1.0.tgz"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "900e5909b7e24ba8e39850dc9a3f422500ac5f5d",
  "homepage": "https://github.com/parro-it/electron-localshortcut#readme",
  "keywords": [
    "electron",
    "shortcuts",
    "browser-window"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "parroit",
      "email": "andrea.parodi@ebansoftware.net"
    }
  ],
  "name": "electron-localshortcut",
  "optionalDependencies": {},
  "readme": "# electron-localshortcut\n\nA module to register/unregister a keyboard shortcut\nlocally to a BrowserWindow instance, without using a Menu.\n\nThis is built to circumvent [this Electron issue](https://github.com/atom/electron/issues/1334).\n\n**Note:** Since this module internally use `global-shortcut` native module, you should not use it until the `ready` event of the app module is emitted. See [electron docs](http://electron.atom.io/docs/latest/api/global-shortcut/).\n\n[![Travis Build Status](https://img.shields.io/travis/parro-it/electron-localshortcut/master.svg)](http://travis-ci.org/parro-it/electron-localshortcut)\n[![NPM module](https://img.shields.io/npm/v/electron-localshortcut.svg)](https://npmjs.org/package/electron-localshortcut)\n[![NPM downloads](https://img.shields.io/npm/dt/electron-localshortcut.svg)](https://npmjs.org/package/electron-localshortcut)\n[![Greenkeeper badge](https://badges.greenkeeper.io/parro-it/electron-localshortcut.svg)](https://greenkeeper.io/)\n\n# Installation\n\n```bash\nnpm install --save electron-localshortcut\n```\n\n# Usage\n\n```javascript\n\tconst electronLocalshortcut = require('electron-localshortcut');\n\tconst BrowserWindow = require('electron').BrowserWindow;\n\n\tconst win = new BrowserWindow();\n\twin.loadUrl('https://github.com');\n\twin.show();\n\n\telectronLocalshortcut.register(win, 'Ctrl+A', () => {\n\t\tconsole.log('You pressed ctrl & A');\n\t});\n\n\telectronLocalshortcut.register(win, 'Ctrl+B', () => {\n\t\tconsole.log('You pressed ctrl & B');\n\t});\n\n\tconsole.log(\n\t\telectronLocalshortcut.isRegistered(win, 'Ctrl+A')\n\t);      // true\n\n\telectronLocalshortcut.unregister(win, 'Ctrl+A');\n\telectronLocalshortcut.unregisterAll(win);\n```\n\n# App shortcuts.\n\nIf you omit the window argument of `isRegistered`, `unregisterAll`, `unregister` and `register` methods, the shortcut is registered as an app shortcut.\nIt is active when any window of the app is focused.\n\nThey differ from native [global-shortcuts](https://github.com/atom/electron/blob/master/docs/api/global-shortcut.md) because they doesn't interfere with other apps running on the same machine.\n\n# Shortcut behaviour.\n\nIf you register a shortcut for a window, this module unregister the shortcut when the window is hidden, unfocused or minimized, and automatically restore them when the window is restored and focused again.\n\nIf you register an app shortcut, this module unregister the shortcut when all windows of your app are hidden, unfocused or minimized, and automatically restore it when any window of your app is restored and focused again.\n\n\n# API\n\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->\n\n## disableAll\n\nDisable all of the shortcuts registered on the BrowserWindow instance.\nRegistered shortcuts no more works on the `window` instance, but the module keep a reference on them. You can reactivate them later by calling `enableAll` method on the same window instance.\n\n**Parameters**\n\n-   `win` **BrowserWindow** BrowserWindow instance\n\nReturns **[Undefined](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined)**\n\n## enableAll\n\nEnable all of the shortcuts registered on the BrowserWindow instance that you had previously disabled calling `disableAll` method.\n\n**Parameters**\n\n-   `win` **BrowserWindow** BrowserWindow instance\n\nReturns **[Undefined](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined)**\n\n## unregisterAll\n\nUnregisters all of the shortcuts registered on any focused BrowserWindow instance. This method does not unregister any shortcut you registered on a particular window instance.\n\n**Parameters**\n\n-   `win` **BrowserWindow** BrowserWindow instance\n\nReturns **[Undefined](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined)**\n\n## register\n\nRegisters the shortcut `accelerator`on the BrowserWindow instance.\n\n**Parameters**\n\n-   `win` **BrowserWindow** BrowserWindow instance to register. This argument could be omitted, in this case the function register the shortcut on all app windows.\n-   `accelerator` **[String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** the shortcut to register\n-   `callback` **[Function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function)** This function is called when the shortcut is pressed and the window is focused and not minimized.\n\nReturns **[Undefined](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined)**\n\n## unregister\n\nUnregisters the shortcut of `accelerator` registered on the BrowserWindow instance.\n\n**Parameters**\n\n-   `win` **BrowserWindow** BrowserWindow instance to unregister. This argument could be omitted, in this case the function unregister the shortcut on all app windows. If you registered the shortcut on a particular window instance, it will do nothing.\n-   `accelerator` **[String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** the shortcut to unregister\n\nReturns **[Undefined](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined)**\n\n## isRegistered\n\nReturns `true` or `false` depending on whether the shortcut `accelerator` is\nregistered on `window`.\n\n**Parameters**\n\n-   `win` **BrowserWindow** BrowserWindow instance to check. This argument could be omitted, in this case the function returns whether the shortcut `accelerator` is registered on all app windows. If you registered the shortcut on a particular window instance, it return false.\n-   `accelerator` **[String](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String)** the shortcut to check\n\nReturns **[Boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** if the shortcut `accelerator` is registered on `window`.\n\n# License\n\nThe MIT License (MIT)\n\nCopyright (c) 2017 Andrea Parodi\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/parro-it/electron-localshortcut.git"
  },
  "scripts": {
    "doc": "documentation readme index.js --section=API",
    "setup-dev": "npm rebuild --runtime=electron --target=1.6.7 --disturl=https://atom.io/download/atom-shell --abi=51",
    "start": "electron example.js",
    "tape": "DEBUG=electron-localshortcut electron test.js",
    "test": "electron test.js | faucet && xo"
  },
  "version": "3.1.0"
}
