{
  "_args": [
    [
      {
        "raw": "isbinaryfile@^4.0.0",
        "scope": null,
        "escapedName": "isbinaryfile",
        "name": "isbinaryfile",
        "rawSpec": "^4.0.0",
        "spec": ">=4.0.0 <5.0.0",
        "type": "range"
      },
      "E:\\work\\yq-hospital\\yq-hospital-admin\\hospital-admin\\node_modules\\app-builder-lib"
    ]
  ],
  "_from": "isbinaryfile@^4.0.0",
  "_hasShrinkwrap": false,
  "_id": "isbinaryfile@4.0.0",
  "_location": "/isbinaryfile",
  "_nodeVersion": "10.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/isbinaryfile_4.0.0_1546916109217_0.5959059216081468"
  },
  "_npmUser": {
    "name": "gjtorikian",
    "email": "gjtorikian@gmail.com"
  },
  "_npmVersion": "6.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "isbinaryfile@^4.0.0",
    "scope": null,
    "escapedName": "isbinaryfile",
    "name": "isbinaryfile",
    "rawSpec": "^4.0.0",
    "spec": ">=4.0.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/app-builder-lib"
  ],
  "_resolved": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-4.0.0.tgz",
  "_shasum": "07d1061c21598b41292b0f5c68add5eab601ad8e",
  "_shrinkwrap": null,
  "_spec": "isbinaryfile@^4.0.0",
  "_where": "E:\\work\\yq-hospital\\yq-hospital-admin\\hospital-admin\\node_modules\\app-builder-lib",
  "bugs": {
    "url": "https://github.com/gjtorikian/isBinaryFile/issues"
  },
  "dependencies": {},
  "description": "Detects if a file is binary in Node.js. Similar to Perl's -B.",
  "devDependencies": {
    "@types/jest": "^23.3.12",
    "@types/node": "^10.12.18",
    "jest": "^23.6.0",
    "prettier": "^1.15.3",
    "release-it": "^9.6.2",
    "ts-jest": "^23.10.5",
    "tslint": "^5.12.0",
    "tslint-config-prettier": "^1.17.0",
    "typescript": "^3.2.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-RBtmso6l2mCaEsUvXngMTIjg3oheXo0MgYzzfT6sk44RYggPnm9fT+cQJAmzRnJIxPHXg9FZglqDJGW28dvcqA==",
    "shasum": "07d1061c21598b41292b0f5c68add5eab601ad8e",
    "tarball": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-4.0.0.tgz",
    "fileCount": 5,
    "unpackedSize": 10075,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcNBENCRA9TVsSAnZWagAATbsP/RU3WxIV0g8qVdXqfmuu\naWo8mGi940HpvzA4DylN+M2y1lSYPFAYw8dJHzBOmzbLFjoBV4d92n25avk0\nObPaBADmzlhATZ7lxki3vwSzPCpY6Hc98owvRito7y4mlHRUJpOykkO8sJ87\noJWORMyBEegoCB1iNW/lGODRm9uXFx2l7lK8Cf1OK2RvO/RirMStoqigjW5q\nG0rSMy/QVpBIB5iy6TphCnzv5bRMJ2LLSsZD/eQAr7FEK1ivJQtLIdQOuyBa\ns322JKYL2mJ6YRu7qYg1sxHNEcJR36WVn5IXez3PHh9JDd+Z6ipDIJrFSDqy\nvBUU0VUgDP82CdEo/bl30iEjG/cZCCVyawV3b2ymqTmYu2WVY7uoOa1C1r2H\nBX8NfVP/RMk0aMX7miKdwETwaogfG+fvtGaJqbz7ZuWYNJm5kjs3hZr4Bi2Y\n+4cpMNJAVTJY/nhyMD+VLMGWaYTh3IAamJJ05NVUE7WDMDAGlps/Vh6naXBP\nwEKx5pSVmGmU3OEQtyfuoR1VELHD2wxcrTt5/IajQdJlODr0MTC8zBxz+l+2\nh056/NJw6qY3yBrx4RLOK1T+9K05COUrxrTb9Mbprh70r937/MM/uebyOkgk\nJbqYOItCG+2UwqIPzARojMrPKoe5ncATNNmB+g4PoliXlcMPoAJF/X5NU6RZ\nZL0f\r\n=olYT\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 8.0.0"
  },
  "files": [
    "lib/**/*"
  ],
  "gitHead": "04ea3eb8ca9f35a8ab555724354f11af1508b93e",
  "homepage": "https://github.com/gjtorikian/isBinaryFile#readme",
  "keywords": [
    "text",
    "binary",
    "encoding",
    "istext",
    "is text",
    "isbinary",
    "is binary",
    "is text or binary",
    "is text or binary file",
    "isbinaryfile",
    "is binary file",
    "istextfile",
    "is text file"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "Garen J. Torikian",
      "email": "gjtorikian@gmail.com"
    }
  ],
  "name": "isbinaryfile",
  "optionalDependencies": {},
  "readme": "# isBinaryFile\n\nDetects if a file is binary in Node.js using ✨promises✨. Similar to [Perl's `-B` switch](http://stackoverflow.com/questions/899206/how-does-perl-know-a-file-is-binary), in that:\n- it reads the first few thousand bytes of a file\n- checks for a `null` byte; if it's found, it's binary\n- flags non-ASCII characters. After a certain number of \"weird\" characters, the file is flagged as binary\n\nMuch of the logic is pretty much ported from [ag](https://github.com/ggreer/the_silver_searcher).\n\nNote: if the file doesn't exist or is a directory, an error is thrown.\n\n## Installation\n\n```\nnpm install isbinaryfile\n```\n\n## Usage\n\nReturns `Promise<boolean>` (or just `boolean` for `*Sync`). `true` if the file is binary, `false` otherwise.\n\n### isBinaryFile(filepath)\n\n* `filepath` -  a `string` indicating the path to the file.\n\n### isBinaryFile(bytes[, size])\n\n* `bytes` - a `Buffer` of the file's contents.\n* `size` - an optional `number` indicating the file size.\n\n### isBinaryFileSync(filepath)\n\n* `filepath` - a `string` indicating the path to the file.\n\n\n### isBinaryFileSync(bytes[, size])\n\n* `bytes` - a `Buffer` of the file's contents.\n* `size` - an optional `number` indicating the file size.\n\n### Examples\n\nHere's an arbitrary usage:\n\n```javascript\nconst isBinaryFile = require(\"isbinaryfile\").isBinaryFile;\nconst fs = require(\"fs\");\n\nconst filename = \"fixtures/pdf.pdf\";\nconst data = fs.readFileSync(filename);\nconst stat = fs.lstatSync(filename);\n\nisBinaryFile(data, stat.size).then((result) => {\n  if (result) {\n    console.log(\"It is binary!\")\n  }\n  else {\n    console.log(\"No it is not.\")\n  }\n});\n\nconst isBinaryFileSync = require(\"isbinaryfile\").isBinaryFileSync;\nconst bytes = fs.readFileSync(filename);\nconst size = fs.lstatSync(filename).size;\nconsole.log(isBinaryFileSync(bytes, size)); // true or false\n```\n\n## Testing\n\nRun `npm install`, then run `npm test`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gjtorikian/isBinaryFile.git"
  },
  "scripts": {
    "build": "tsc",
    "format": "prettier --write \"src/**/*.ts\" \"src/**/*.js\"",
    "lint": "tslint -p tsconfig.json",
    "postversion": "git push && git push --tags",
    "prepare": "npm run build",
    "prepublishOnly": "npm test && npm run lint",
    "preversion": "npm run lint",
    "release": "release-it",
    "test": "jest --config jestconfig.json",
    "version": "npm run format && git add -A src",
    "watch": "tsc -w"
  },
  "types": "lib/index.d.ts",
  "version": "4.0.0"
}
