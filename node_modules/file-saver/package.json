{
  "_args": [
    [
      {
        "raw": "file-saver@^2.0.0-rc.4",
        "scope": null,
        "escapedName": "file-saver",
        "name": "file-saver",
        "rawSpec": "^2.0.0-rc.4",
        "spec": ">=2.0.0-rc.4 <3.0.0",
        "type": "range"
      },
      "E:\\work\\yq-hospital\\yq-hospital-sass\\sass-admin"
    ]
  ],
  "_from": "file-saver@^2.0.0-rc.4",
  "_hasShrinkwrap": false,
  "_id": "file-saver@2.0.1",
  "_location": "/file-saver",
  "_nodeVersion": "11.7.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/file-saver_2.0.1_1550413483537_0.8597917643068185"
  },
  "_npmUser": {
    "name": "endless",
    "email": "jimmy@warting.se"
  },
  "_npmVersion": "6.5.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "file-saver@^2.0.0-rc.4",
    "scope": null,
    "escapedName": "file-saver",
    "name": "file-saver",
    "rawSpec": "^2.0.0-rc.4",
    "spec": ">=2.0.0-rc.4 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/file-saver/-/file-saver-2.0.1.tgz",
  "_shasum": "7fe2242af1cbc559a29d8176078a8b56d781fa79",
  "_shrinkwrap": null,
  "_spec": "file-saver@^2.0.0-rc.4",
  "_where": "E:\\work\\yq-hospital\\yq-hospital-sass\\sass-admin",
  "author": {
    "name": "Eli Grey",
    "email": "me@eligrey.com"
  },
  "bugs": {
    "url": "https://github.com/eligrey/FileSaver.js/issues"
  },
  "dependencies": {},
  "description": "An HTML5 saveAs() FileSaver implementation",
  "devDependencies": {
    "@babel/cli": "^7.1.0",
    "@babel/core": "^7.1.0",
    "@babel/plugin-transform-modules-umd": "^7.1.0",
    "babel-preset-minify": "^0.4.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-dCB3K7/BvAcUmtmh1DzFdv0eXSVJ9IAFt1mw3XZfAexodNRoE29l3xB2EX4wH2q8m/UTzwzEPq/ArYk98kUkBQ==",
    "shasum": "7fe2242af1cbc559a29d8176078a8b56d781fa79",
    "tarball": "https://registry.npmjs.org/file-saver/-/file-saver-2.0.1.tgz",
    "fileCount": 8,
    "unpackedSize": 33806,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcaW6sCRA9TVsSAnZWagAAqUcP/1zyfUwMpp+ppzSjv/UJ\nVVQCfdQ5vga8wmL9VNG87jA6AdkGC6pF6LNCwCeGn4YxX1rkfPdMy9bu192/\nQeQco3wq7NFWp6d3zni8s0psSRVkl1aG47ZOpooa3R+uDIOH+lRZHcGmzjhN\ne2cF4kzHTgrBOkl4/CZJBHMKEcpMTCELbhz2aZn7GZR8gL8P80j5DQN55bP2\nOwo4EOnOT9kcbJZmxjY/iZcTS9Csvs9uU+Vf7BEzfZd4XHez4Q9OaBdbUc4/\nGVJxjArKBW31XInHZMLaMXWENi111sRaHJCVqZqAUJfTRG+YeaSMStTm2wM8\n4hUR+e5LLvEtVWA0aa1SMTuoPx2TVIwIKDPiHUg5jiBxaV+ph0uTHZ1YFwyO\ndE4Yzf6UtmRgL8BSCIsG9PkKlfFdam8UsvAsF60sbmPUIH72paodbkrsifJC\naD573MFxMef50ZGnKMYbHMRV8U8CFg+sWnnyIGkU0wW5HBqesRmY0dB6B5TY\nUcW/9COLx/e/SWu35Wl4EMs9qdKH8TqKbR0Mb5PBFW9e7GwTsf7Hz4S/2jka\nxbU9FzsWBj0Gdje8tfIcsBcC4yRaVtWChbRbkkYu6qZfjOw8gxu2sj0rC66c\ndGK+POxHz0G9YJDg57N1iZueRXwq2WV3dzi+CPbaeLCweIoVLh8gGdALElj4\n5jNB\r\n=fhCA\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "dist/FileSaver.js",
    "dist/FileSaver.min.js",
    "dist/FileSaver.min.js.map",
    "src/FileSaver.js"
  ],
  "gitHead": "3e46b730528fa34a82fcd97ba98d6e08c6f8eddf",
  "homepage": "https://github.com/eligrey/FileSaver.js#readme",
  "keywords": [
    "filesaver",
    "saveas",
    "blob"
  ],
  "license": "MIT",
  "main": "dist/FileSaver.min.js",
  "maintainers": [
    {
      "name": "eli",
      "email": "~@eligrey.com"
    },
    {
      "name": "endless",
      "email": "jimmy@warting.se"
    }
  ],
  "name": "file-saver",
  "optionalDependencies": {},
  "readme": "If you need to save really large files bigger then the blob's size limitation or don't have\nenough RAM, then have a look at the more advanced [StreamSaver.js][7]\nthat can save data directly to the hard drive asynchronously with the power of the new streams API. That will have\nsupport for progress, cancelation and knowing when it's done writing\n\nFileSaver.js\n============\n\nFileSaver.js is the solution to saving files on the client-side, and is perfect for\nweb apps that generates files on the client, However if the file is coming from the\nserver we recommend you to first try to use [Content-Disposition][8] attachment response header as it has more cross-browser compatible\n\nLooking for `canvas.toBlob()` for saving canvases? Check out\n[canvas-toBlob.js][2] for a cross-browser implementation.\n\nSupported Browsers\n------------------\n\n| Browser        | Constructs as | Filenames    | Max Blob Size | Dependencies |\n| -------------- | ------------- | ------------ | ------------- | ------------ |\n| Firefox 20+    | Blob          | Yes          | 800 MiB       | None         |\n| Firefox < 20   | data: URI     | No           | n/a           | [Blob.js](https://github.com/eligrey/Blob.js) |\n| Chrome         | Blob          | Yes          | [500 MiB][3]  | None         |\n| Chrome for Android | Blob      | Yes          | [500 MiB][3]  | None         |\n| Edge           | Blob          | Yes          | ?             | None         |\n| IE 10+         | Blob          | Yes          | 600 MiB       | None         |\n| Opera 15+      | Blob          | Yes          | 500 MiB       | None         |\n| Opera < 15     | data: URI     | No           | n/a           | [Blob.js](https://github.com/eligrey/Blob.js) |\n| Safari 6.1+*   | Blob          | No           | ?             | None         |\n| Safari < 6     | data: URI     | No           | n/a           | [Blob.js](https://github.com/eligrey/Blob.js) |\n| Safari 10.1+   | Blob          | Yes          | n/a           | None         |\n\nFeature detection is possible:\n\n```js\ntry {\n    var isFileSaverSupported = !!new Blob;\n} catch (e) {}\n```\n\n### IE < 10\n\nIt is possible to save text files in IE < 10 without Flash-based polyfills.\nSee [ChenWenBrian and koffsyrup's `saveTextAs()`](https://github.com/koffsyrup/FileSaver.js#examples) for more details.\n\n### Safari 6.1+\n\nBlobs may be opened instead of saved sometimes—you may have to direct your Safari users to manually\npress <kbd>⌘</kbd>+<kbd>S</kbd> to save the file after it is opened. Using the `application/octet-stream` MIME type to force downloads [can cause issues in Safari](https://github.com/eligrey/FileSaver.js/issues/12#issuecomment-47247096).\n\n### iOS\n\nsaveAs must be run within a user interaction event such as onTouchDown or onClick; setTimeout will prevent saveAs from triggering. Due to restrictions in iOS saveAs opens in a new window instead of downloading, if you want this fixed please [tell Apple how this WebKit bug is affecting you](https://bugs.webkit.org/show_bug.cgi?id=167341).\n\nSyntax\n------\n### Import `saveAs()` from file-saver\n```js\nimport { saveAs } from 'file-saver';\n```\n\n```js\nFileSaver saveAs(Blob/File/Url, optional DOMString filename, optional Object { autoBOM })\n```\n\nPass `{ autoBOM: true }` if you want FileSaver.js to automatically provide Unicode text encoding hints (see: [byte order mark](https://en.wikipedia.org/wiki/Byte_order_mark)).\n\nExamples\n--------\n\n### Saving text using `require()`\n```js\nvar FileSaver = require('file-saver');\nvar blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\nFileSaver.saveAs(blob, \"hello world.txt\");\n```\n\n### Saving text\n\n```js\nvar blob = new Blob([\"Hello, world!\"], {type: \"text/plain;charset=utf-8\"});\nFileSaver.saveAs(blob, \"hello world.txt\");\n```\n\n### Saving URLs\n\n```js\nFileSaver.saveAs(\"https://httpbin.org/image\", \"image.jpg\");\n```\nUsing URLs within the same origin will just use `a[download]`\nOtherwise, it will first check if it supports cors header with a synchronously head request\nif it does it will download the data and save it using blob URLs\nif not it will try to download it using `a[download]`\n\nThe standard W3C File API [`Blob`][4] interface is not available in all browsers.\n[Blob.js][5] is a cross-browser `Blob` implementation that solves this.\n\n### Saving a canvas\n```js\nvar canvas = document.getElementById(\"my-canvas\");\ncanvas.toBlob(function(blob) {\n    saveAs(blob, \"pretty image.png\");\n});\n```\n\nNote: The standard HTML5 `canvas.toBlob()` method is not available in all browsers.\n[canvas-toBlob.js][6] is a cross-browser `canvas.toBlob()` that polyfills this.\n\n### Saving File\n\nYou can save a File constructor without specifying a filename. The\nFile itself already contains a name, There is a hand full of ways to get a file\ninstance (from storage, file input, new constructor, clipboard event)\nBut if you still want to change the name, then you can change it in the 2nd argument\n\n```js\n// Note: Ie and Edge don't support the new File constructor,\n// so it's better to construct blobs and use saveAs(blob, filename)\nvar file = new File([\"Hello, world!\"], \"hello world.txt\", {type: \"text/plain;charset=utf-8\"});\nFileSaver.saveAs(file);\n```\n\n\n\n![Tracking image](https://in.getclicky.com/212712ns.gif)\n\n  [1]: http://eligrey.com/demos/FileSaver.js/\n  [2]: https://github.com/eligrey/canvas-toBlob.js\n  [3]: https://code.google.com/p/chromium/issues/detail?id=375297\n  [4]: https://developer.mozilla.org/en-US/docs/DOM/Blob\n  [5]: https://github.com/eligrey/Blob.js\n  [6]: https://github.com/eligrey/canvas-toBlob.js\n  [7]: https://github.com/jimmywarting/StreamSaver.js\n  [8]: https://github.com/eligrey/FileSaver.js/wiki/Saving-a-remote-file#using-http-header\n\nInstallation\n------------------\n\n```bash\n# Basic Node.JS installation\nnpm install file-saver --save\nbower install file-saver\n```\n\nAdditionally, TypeScript definitions can be installed via:\n\n```bash\n# Additional typescript definitions\nnpm install @types/file-saver --save-dev\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eligrey/FileSaver.js.git"
  },
  "scripts": {
    "build": "npm run build:development && npm run build:production",
    "build:development": "babel -o dist/FileSaver.js --plugins @babel/plugin-transform-modules-umd src/FileSaver.js",
    "build:production": "babel -o dist/FileSaver.min.js -s --plugins @babel/plugin-transform-modules-umd --presets minify src/FileSaver.js",
    "prepublishOnly": "npm run build",
    "test": "echo \"Error: no test specified\" && exit 0"
  },
  "version": "2.0.1"
}
